import{_ as p,c as t,b as r,o as a}from"./app-DBgYUJxj.js";const i={};function s(n,e){return a(),t("div",null,e[0]||(e[0]=[r('<h1 id="puppeteer" tabindex="-1"><a class="header-anchor" href="#puppeteer"><span>puppeteer</span></a></h1><hr><p>这是一个puppeteer起始文件,请在左侧列表中选择文档阅读</p><h2 id="什么是-puppeteer" tabindex="-1"><a class="header-anchor" href="#什么是-puppeteer"><span>什么是 Puppeteer？</span></a></h2><hr><p>Puppeteer 是一个 JavaScript 库，它提供了一个高级 API 来通过 开发工具协议 或 WebDriver 双向 控制 Chrome 或 Firefox。Puppeteer 默认在无头（无可见 UI）浏览器中运行，但可以配置为在可见（“有头”）浏览器中运行。</p><h2 id="puppeteer特性" tabindex="-1"><a class="header-anchor" href="#puppeteer特性"><span>Puppeteer特性</span></a></h2><hr><p>你可以在浏览器中手动执行的大多数作都可以使用 Puppeteer 完成！以下是一些帮助你入门的示例：</p><p>自动化表单提交、UI 测试、键盘输入等。</p><p>使用最新的 JavaScript 和浏览器功能创建自动化测试环境。</p><p>捕获站点的 时间线痕迹 以帮助诊断性能问题。</p><p>测试 Chrome 扩展程序。</p><p>生成页面的屏幕截图和 PDF。</p><p>抓取 SPA（单页应用）并生成预渲染内容（即 “SSR”（服务器端渲染））。 安装 要在项目中使用 Puppeteer，请运行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#575279;--shiki-dark:#e0def4;--shiki-light-bg:#faf4ed;--shiki-dark-bg:#232136;"><pre class="shiki shiki-themes rose-pine-dawn rose-pine-moon vp-code"><code><span class="line"><span style="--shiki-light:#D7827E;--shiki-dark:#EA9A97;">$</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> npm</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> i</span><span style="--shiki-light:#EA9D34;--shiki-dark:#F6C177;"> puppeteer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当你安装 Puppeteer 时，它会自动下载最新版本的 用于测试的 Chrome（~170MB macOS、~282MB Linux、~280MB Windows）和 二进制文件（从 Puppeteer v21.6.0 开始），即带有 Puppeteer 的 保证能用于。浏览器默认下载到文件夹（从 Puppeteer v19.0.0 开始）。请参阅 configuration 了解用于控制下载行为的配置选项和环境变量。chrome-headless-shell$HOME/.cache/puppeteer</p><p>¥当您安装 Puppeteer 时，它会自动下载最新版本的 Chrome 进行测试（~170MB macOS、~282MB Linux、~280MB Windows）和二进制文件（从 Puppeteer v21.6.0 开始），保证 与 Puppeteer 合作。浏览器将下载到文件夹 默认情况下（从 Puppeteer v19.0.0 开始）。请参阅配置，了解配置选项和环境变量以控制下载行为。chrome-headless-shell$HOME/.cache/puppeteer</p>',18)]))}const u=p(i,[["render",s]]),o=JSON.parse('{"path":"/posts/Puppeteer/puppeteer.html","title":"puppeteer","lang":"zh-CN","frontmatter":{"description":"puppeteer 这是一个puppeteer起始文件,请在左侧列表中选择文档阅读 什么是 Puppeteer？ Puppeteer 是一个 JavaScript 库，它提供了一个高级 API 来通过 开发工具协议 或 WebDriver 双向 控制 Chrome 或 Firefox。Puppeteer 默认在无头（无可见 UI）浏览器中运行，但可以配...","head":[["meta",{"property":"og:url","content":"https://fishbread.net/posts/Puppeteer/puppeteer.html"}],["meta",{"property":"og:site_name","content":"fishbread的博客"}],["meta",{"property":"og:title","content":"puppeteer"}],["meta",{"property":"og:description","content":"puppeteer 这是一个puppeteer起始文件,请在左侧列表中选择文档阅读 什么是 Puppeteer？ Puppeteer 是一个 JavaScript 库，它提供了一个高级 API 来通过 开发工具协议 或 WebDriver 双向 控制 Chrome 或 Firefox。Puppeteer 默认在无头（无可见 UI）浏览器中运行，但可以配..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"puppeteer\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"什么是 Puppeteer？","slug":"什么是-puppeteer","link":"#什么是-puppeteer","children":[]},{"level":2,"title":"Puppeteer特性","slug":"puppeteer特性","link":"#puppeteer特性","children":[]}],"excerpt":"\\n<hr>\\n<p>这是一个puppeteer起始文件,请在左侧列表中选择文档阅读</p>\\n<h2>什么是 Puppeteer？</h2>\\n<hr>\\n<p>Puppeteer 是一个 JavaScript 库，它提供了一个高级 API 来通过 开发工具协议 或 WebDriver 双向 控制 Chrome 或 Firefox。Puppeteer 默认在无头（无可见 UI）浏览器中运行，但可以配置为在可见（“有头”）浏览器中运行。</p>\\n<h2>Puppeteer特性</h2>\\n<hr>\\n<p>你可以在浏览器中手动执行的大多数作都可以使用 Puppeteer 完成！以下是一些帮助你入门的示例：</p>","autoDesc":true}');export{u as comp,o as data};
